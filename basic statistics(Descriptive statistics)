#Descriptive statistics


> vars <- c("mpg", "hp", "wt")
> head(mtcars[vars])

#The summary() function provides the minimum, maximum, quartiles, and the mean for numerical variables and frequencies for factors and logical vectors.
> summary(mtcars[vars])

#where x is your data frame (or matrix) and FUN is an arbitrary function. If options are present, they’re passed to FUN. Typical functions that you can plug in here are mean
#sd, var, min, max, median, length, range, and quantile. The function fivenum() returns Tukey’s five-number summary (minimum, lower-hinge, median, upper-hinge,and maximum).
sapply(x, FUN, options)

> mystats <- function(x, na.omit=FALSE){
if (na.omit)
x <- x[!is.na(x)]
m <- mean(x)
n <- length(x)
s <- sd(x)
skew <- sum((x-m)^3/s^3)/n
kurt <- sum((x-m)^4/s^4)/n - 3
return(c(n=n, mean=m, stdev=s, skew=skew, kurtosis=kurt))
}
> sapply(mtcars[vars], mystats)

#The describe() function in the Hmisc package returns the number of variables and observations, the number of missing and unique values, the mean, quantiles, and
the five highest and lowest values.
> library(Hmisc)
> describe(mtcars[vars])


#The pastecs package includes a function named stat.desc()
#if norm=TRUE (not the default), normal distribution statistics are returned, including skewness and kurtosis (and their statistical significance),
and the Shapiro–Wilk test of normality. A p-value option is used to calculate the confidence interval for the mean (.95 by default).
stat.desc(x, basic=TRUE, desc=TRUE, norm=FALSE, p=0.95)
> library(pastecs)
> stat.desc(mtcars[vars])


#the psych package also has a function called describe()
> library(psych)
Attaching package: 'psych'
The following object(s) are masked from package:Hmisc :
describe
describe(mtcars[vars])

#Descriptive statistics by group using aggregate()
#divide the total sample into interested groups
#If you had used list(mtcars$am), the am column would have been labeled Group.1 rather than am.
#If you have more than one grouping variable, you can use code like by=list(name1=groupvar1, name2=groupvar2, … , groupvarN).
> aggregate(mtcars[vars], by=list(am=mtcars$am), mean)
> aggregate(mtcars[vars], by=list(am=mtcars$am), sd)


#Descriptive statistics by group using by()
> dstats <- function(x)(c(mean=mean(x), sd=sd(x)))
> by(mtcars[vars], mtcars$am, dstats)

#Summary statistics by group using summaryBy() in the doBy package
> library(doBy)
> summaryBy(mpg+hp+wt~am, data=mtcars, FUN=mystats)
